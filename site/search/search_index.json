{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CylindricalCast CylindricalCast is the only Open-Source solution to cylindrical casting tasks on Roblox. The API makes use of the updated Roblox Raycast engine, It has a simple and easily readable API for casting cylinders! Getting Started It's simple to start using CylindricalCast in your projects: Tip It's best if you place the module somewhere like ReplicatedStorage because you can use it both on the client and server! Manual Installation You can either take the toolbox Asset or download the latest Release and insert it into studio. Rojo Installation You can use git submodules to clone this repo into your project: $ git submodule add https://github.com/IdleBrickRBLX/CylindricalCast packages/CylindricalCast Once inserted, Sync Roblox Studio and Rojo using the Rojo studio Plugin Example local RunService = game : GetService ( \"RunService\" ) local CylindricalCast = require ( CylindricalCast_PATH_HERE ) local Cylinder = CylindricalCast . new ({ Quality = 30 , -- The higher the quality the more precision you have. Recommended 15, 50 Size = Vector3 . new ( 1 , 2 , 2 ), -- (Thicknes, RadiusY, RadiusZ) Ignore = {}, ThicknessQuality = 2 -- Quality on the X axis. Recommended 2, 3 }) RunService . RenderStepped : Connect ( function () local yourCFrame = CFrame . new ( 0 , 5 , 0 ) Cylinder . Size = Vector3 . new ( 1 , 3 , 3 ) Cylinder . RaycastParams . FilterDescendantsInstances = {} local Cast = Cylinder : Solve ( yourCFrame ) if Cast then print ( Cast . Instance ) print ( Cast . Position ) end end )","title":"Home"},{"location":"#cylindricalcast","text":"CylindricalCast is the only Open-Source solution to cylindrical casting tasks on Roblox. The API makes use of the updated Roblox Raycast engine, It has a simple and easily readable API for casting cylinders!","title":"CylindricalCast"},{"location":"#getting-started","text":"It's simple to start using CylindricalCast in your projects: Tip It's best if you place the module somewhere like ReplicatedStorage because you can use it both on the client and server!","title":"Getting Started"},{"location":"#manual-installation","text":"You can either take the toolbox Asset or download the latest Release and insert it into studio.","title":"Manual Installation"},{"location":"#rojo-installation","text":"You can use git submodules to clone this repo into your project: $ git submodule add https://github.com/IdleBrickRBLX/CylindricalCast packages/CylindricalCast Once inserted, Sync Roblox Studio and Rojo using the Rojo studio Plugin","title":"Rojo Installation"},{"location":"#example","text":"local RunService = game : GetService ( \"RunService\" ) local CylindricalCast = require ( CylindricalCast_PATH_HERE ) local Cylinder = CylindricalCast . new ({ Quality = 30 , -- The higher the quality the more precision you have. Recommended 15, 50 Size = Vector3 . new ( 1 , 2 , 2 ), -- (Thicknes, RadiusY, RadiusZ) Ignore = {}, ThicknessQuality = 2 -- Quality on the X axis. Recommended 2, 3 }) RunService . RenderStepped : Connect ( function () local yourCFrame = CFrame . new ( 0 , 5 , 0 ) Cylinder . Size = Vector3 . new ( 1 , 3 , 3 ) Cylinder . RaycastParams . FilterDescendantsInstances = {} local Cast = Cylinder : Solve ( yourCFrame ) if Cast then print ( Cast . Instance ) print ( Cast . Position ) end end )","title":"Example"},{"location":"docs/","text":"Documentation CylindricalCast.new() Creates a new CylindricalCast config. Returns Metatable Syntax CylindricalCast.new(config: type({Quality : number, Size : Vector3, ThicknessQuality : number, Ignore : {Instance}})) CylindricalCast:Solve() Casts the cylinder. Returns RaycastResult Syntax CylindricalCast:Solve(CF: CFrame): RaycastParams | nil","title":"Documentation"},{"location":"docs/#documentation","text":"","title":"Documentation"},{"location":"docs/#cylindricalcastnew","text":"Creates a new CylindricalCast config. Returns Metatable","title":"CylindricalCast.new()"},{"location":"docs/#syntax","text":"CylindricalCast.new(config: type({Quality : number, Size : Vector3, ThicknessQuality : number, Ignore : {Instance}}))","title":"Syntax"},{"location":"docs/#cylindricalcastsolve","text":"Casts the cylinder. Returns RaycastResult","title":"CylindricalCast:Solve()"},{"location":"docs/#syntax_1","text":"CylindricalCast:Solve(CF: CFrame): RaycastParams | nil","title":"Syntax"}]}